{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","firstItemIndex","lastItemIndex","pageQuantity","Math","ceil","pages","className","classNames","disabled","href","onClick","map","page","active","ev","currentTarget","textContent","items","slice","item","App","useState","setCurrentPage","itemPerPage","setItemPerPage","firstIndex","lastIndex","min","length","id","onChange","value","option","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCQIG,EAA8B,SAAC,GAOrC,IANLC,EAMI,EANJA,MACAC,EAKI,EALJA,QACAC,EAII,EAJJA,YACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,eACAC,EACI,EADJA,cAEMC,EAAeC,KAAKC,KAAKR,EAAQC,GACjCQ,EAAQhB,EAAW,EAAGa,GAE5B,OACE,qCACE,qBAAII,UAAU,aAAd,UACE,oBACEA,UAAWC,IACT,YACA,CACEC,SAA0B,IAAhBV,IAJhB,SAQE,mBACE,UAAQ,WACRQ,UAAU,YACVG,KAAK,QACL,gBAAc,OACdC,QAAS,kBAAMX,EAAaD,EAAc,IAL5C,oBAUDO,EAAMM,KAAI,SAAAC,GAAI,OACb,oBACEN,UAAWC,IACT,YACA,CACEM,OAAQD,IAASd,IAJvB,SAQE,mBACE,UAAQ,WACRQ,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,SAACI,GACJA,EAAGC,cAAcC,cACfF,EAAGC,cAAcC,cAAgBlB,GACrCC,GAAce,EAAGC,cAAcC,cAPrC,SAWGJ,SAIP,oBACEN,UAAWC,IACT,YACA,CACEC,SAAUV,IAAgBI,IAJhC,SAQE,mBACE,UAAQ,WACRI,UAAU,YACVG,KAAK,QACL,gBAAc,QACdC,QAAS,kBAAMX,EAAaD,EAAc,IAL5C,uBAWJ,6BACGmB,EAAMC,MAAMlB,EAAgBC,GAAeU,KAAI,SAAAQ,GAAI,OAClD,oBAAI,UAAQ,OAAZ,SAAoBA,aCrFjBF,EAAQ5B,EAAW,EAAG,IAChCsB,KAAI,SAAAlB,GAAC,qBAAYA,MAEP2B,EAAgB,WAC3B,MAAsCC,mBAAS,GAA/C,mBAAOvB,EAAP,KAAoBwB,EAApB,KACA,EAAsCD,mBAAS,GAA/C,mBAAOE,EAAP,KAAoBC,EAApB,KACMC,GAAc3B,EAAc,GAAKyB,EACjCG,EAAYD,EAAaF,EACzBtB,EAAgBE,KAAKwB,IAAID,EAAWT,EAAMW,QAUhD,OACE,sBAAKtB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWR,EADX,mBACiC2B,EAAa,EAD9C,cACqDxB,EADrD,eACyEgB,EAAMW,OAD/E,OAIA,sBAAKtB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,wBACE,UAAQ,kBACRuB,GAAG,kBACHvB,UAAU,eACVwB,SAnBR,SAAChB,GACDU,GAAgBV,EAAGC,cAAcgB,OACjCT,EAAe,IAaT,SAlBc,CAAC,EAAG,EAAG,GAAI,IAwBRX,KAAI,SAAAqB,GAAM,OACvB,wBACED,MAAOC,EADT,SAIGA,GAFIA,UAQb,uBAAOC,QAAQ,kBAAkB3B,UAAU,qBAA3C,+BAMF,cAAC,EAAD,CACEV,MAAOqB,EAAMW,OACb/B,QAAS0B,EACTzB,YAAaA,EACbC,aAAcuB,EACdtB,eAAgByB,EAChBxB,cAAeA,QC7DvBiC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.619e6104.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import { Dispatch, SetStateAction } from 'react';\nimport classNames from 'classnames';\nimport { getNumbers } from '../../utils';\n// eslint-disable-next-line import/no-cycle\nimport { items } from '../../App';\n\ninterface Props {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: Dispatch<SetStateAction<number>>,\n  firstItemIndex: number,\n  lastItemIndex: number\n}\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n  firstItemIndex,\n  lastItemIndex,\n}) => {\n  const pageQuantity = Math.ceil(total / perPage);\n  const pages = getNumbers(1, pageQuantity);\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li\n          className={classNames(\n            'page-item',\n            {\n              disabled: currentPage === 1,\n            },\n          )}\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled=\"true\"\n            onClick={() => onPageChange(currentPage - 1)}\n          >\n            «\n          </a>\n        </li>\n        {pages.map(page => (\n          <li\n            className={classNames(\n              'page-item',\n              {\n                active: page === currentPage,\n              },\n            )}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${page}`}\n              onClick={(ev) => {\n                if (ev.currentTarget.textContent\n                  && +ev.currentTarget.textContent !== currentPage) {\n                  onPageChange(+ev.currentTarget.textContent);\n                }\n              }}\n            >\n              {page}\n            </a>\n          </li>\n        ))}\n        <li\n          className={classNames(\n            'page-item',\n            {\n              disabled: currentPage === pageQuantity,\n            },\n          )}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled=\"false\"\n            onClick={() => onPageChange(currentPage + 1)}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n      <ul>\n        {items.slice(firstItemIndex, lastItemIndex).map(item => (\n          <li data-cy=\"item\">{item}</li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\n// eslint-disable-next-line import/no-cycle\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport const items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemPerPage, setItemPerPage] = useState(5);\n  const firstIndex = (currentPage - 1) * itemPerPage;\n  const lastIndex = firstIndex + itemPerPage;\n  const lastItemIndex = Math.min(lastIndex, items.length);\n\n  const selectOptions = [3, 5, 10, 20];\n\n  const handleChangeItemsPerPage\n  = (ev: React.FormEvent<HTMLSelectElement>) => {\n    setItemPerPage(+ev.currentTarget.value);\n    setCurrentPage(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstIndex + 1} - ${lastItemIndex} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            onChange={handleChangeItemsPerPage}\n          >\n            {selectOptions.map(option => (\n              <option\n                value={option}\n                key={option}\n              >\n                {option}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      {/* Move this markup to Pagination */}\n      <Pagination\n        total={items.length}\n        perPage={itemPerPage}\n        currentPage={currentPage}\n        onPageChange={setCurrentPage}\n        firstItemIndex={firstIndex}\n        lastItemIndex={lastItemIndex}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}